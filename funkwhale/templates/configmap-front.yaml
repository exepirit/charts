---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "funkwhale.fullname" . }}-front
  labels:
    app.kubernetes.io/name: {{ include "funkwhale.name" . }}
    helm.sh/chart: {{ include "funkwhale.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    audio.funkwhale/component: front
data:
  nginx.conf: |
    upstream funkwhale-api {
      server localhost:5000;
    }

    map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
    }

    server {
      listen 80;
      listen [::]:80;

      server_name ${FUNKWHALE_HOSTNAME};

      root /frontend;

      add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:; worker-src 'self'";
      add_header Referrer-Policy "strict-origin-when-cross-origin";
      add_header X-Frame-Options "SAMEORIGIN" always;

      # compression settings
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    256;
      gzip_proxied       any;
      gzip_vary          on;

      gzip_types
          application/javascript
          application/vnd.geo+json
          application/vnd.ms-fontobject
          application/x-font-ttf
          application/x-web-app-manifest+json
          font/opentype
          image/bmp
          image/svg+xml
          image/x-icon
          text/cache-manifest
          text/css
          text/plain
          text/vcard
          text/vnd.rim.location.xloc
          text/vtt
          text/x-component
          text/x-cross-domain-policy;
      # end of compression settings

      location / {
          include /etc/nginx/funkwhale_proxy.conf;
          # this is needed if you have file import via upload enabled
          client_max_body_size ${NGINX_MAX_BODY_SIZE};
          proxy_pass   http://funkwhale-api/;
      }

      location /front/ {
          add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:; worker-src 'self'";
          add_header Referrer-Policy "strict-origin-when-cross-origin";
          add_header Service-Worker-Allowed "/";
          add_header X-Frame-Options "ALLOW";
          alias /frontend/;
          expires 30d;
          add_header Pragma public;
          add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      }

      location /front/embed.html {
          add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; object-src 'none'; media-src 'self' data:; worker-src 'self'";
          add_header Referrer-Policy "strict-origin-when-cross-origin";

          add_header X-Frame-Options "" always;
          alias /frontend/embed.html;
          expires 30d;
          add_header Pragma public;
          add_header Cache-Control "public, must-revalidate, proxy-revalidate";
      }

      location /federation/ {
          include /etc/nginx/funkwhale_proxy.conf;
          proxy_pass   http://funkwhale-api/federation/;
      }

      # You can comment this if you do not plan to use the Subsonic API
      location /rest/ {
          include /etc/nginx/funkwhale_proxy.conf;
          proxy_pass   http://funkwhale-api/api/subsonic/rest/;
      }

      location /.well-known/ {
          include /etc/nginx/funkwhale_proxy.conf;
          proxy_pass   http://funkwhale-api/.well-known/;
      }

      location /media/ {
          alias ${MEDIA_ROOT}/;
      }

    {{- if .Values.s3.enabled }}
      location ~ /_protected/media/(.+) {
          internal;
          # Needed to ensure DSub auth isn't forwarded to S3/Minio, see #932
          proxy_set_header Authorization "";
          proxy_pass $1;
      }
    {{- else }}
      # this is an internal location that is used to serve
      # audio files once correct permission / authentication
      # has been checked on API side
      location /_protected/media {
          internal;
          alias   ${MEDIA_ROOT};
      }
    {{- end }}

      location /_protected/music {
          # this is an internal location that is used to serve
          # audio files once correct permission / authentication
          # has been checked on API side
          # Set this to the same value as your MUSIC_DIRECTORY_PATH setting
          internal;
          alias   ${MUSIC_DIRECTORY_SERVE_PATH};
      }

      location /staticfiles/ {
          # django static files
          alias ${STATIC_ROOT}/;
      }
    }
  proxy.conf: |
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header X-Forwarded-Host $http_x_forwarded_host;
    proxy_set_header X-Forwarded-Port $http_x_forwarded_port;
    proxy_redirect off;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
