# Default values for webdav.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: exepir1t/webdav
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v4.4.1-dirty"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

auth:
  enabled: true
  users:
    - username: admin
      password: admin

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# PVC-based data storage configuration
persistence:
  enabled: false
  # existingClaim: webdav-data
  # storageClass: "-"
  # volumeName: webdav-data

  ## Note; Using ReadWriteOnce for persistence will require the addition of
  ## a required affinity for the celery worker, as well as the use of only a
  ## single api replica.
  ##
  ## An example is provided for the worker affinity
  accessMode: ReadWriteMany
  size: 1Gi

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
